'scopeName': 'source.arrow'
'fileTypes': [
  'as'
]
'name': 'Arrow'
'patterns': [
  {
    'include': '#comment_line'
  }
  {
    'include': '#literal_integer'
  }
  {
    'include': '#literal_bool'
  }
  {
    'include': '#variable'
  }
]

'repository':
  # Line Comment `// ...`
  'comment_line':
    'begin': '(^[ \\t]+)?(?=//)'
    'beginCaptures':
      '1':
        'name': 'punctuation.whitespace.comment.leading.arrow'
    'end': '(?!\\G)'
    'patterns': [
      {
        'begin': '//'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.comment.arrow'
        'end': '\\n'
        'name': 'comment.line.arrow'
      }
    ]
  # Integer
  'literal_integer':
    'patterns': [
      # Integer: Hexadecimal
      {
        'match': '\\b(?i:(0x[a-z0-9]([a-z0-9]|_(?!\\b))*))'
        'name': 'constant.numeric.integer.hexadecimal.arrow'
      }
      # Integer: Binary
      {
        'match': '\\b(?i:(0b[0-1]([0-1]|_(?!\\b))*))'
        'name': 'constant.numeric.integer.binary.arrow'
      }
      # Integer: Octal
      {
        'match': '\\b(?i:(0o[0-7]([0-7]|_(?!\\b))*))'
        'name': 'constant.numeric.integer.octal.arrow'
      }
      # Integer: Octal
      {
        'match': '\\b([0-9]([0-9]|_(?!\\b))*)'
        'name': 'constant.numeric.integer.octal.arrow'
      }
    ]
  # Boolean: true | false
  'literal_bool':
    'match': '\\b(true|false)\\b'
    'name': 'constant.language.boolean.$1.arrow'
  # Variable
  'variable':
    'begin': '^\\s*(let)\\s+([A-Za-z_][A-Za-z_0-9]*)\\s*'
    'beginCaptures':
      '1': 'name': 'keyword.let.arrow'
      '2': 'name': 'variable.other.arrow'
    'end': '(?=;|$)'
    'patterns': [
      {
        'begin': '\\s*(:)\\s*'
        'beginCaptures':
          '1': 'name': 'punctuation.seperator.arrow'
        'end': '(?=\\=|;|$)'
        'patterns': [
          {
            'include': "$self"
          }
        ]
      }
      {
        'begin': '\\s*(=)\\s*'
        'beginCaptures':
          '1': 'name': 'punctuation.operator.arrow'
        'end': '(?=;|$)'
        'patterns': [
          {
            'include': "$self"
          }
        ]
      }
    ]
